//
//  GameProgressManager.swift
//  Word Star
//
//  Created by ChatGPT on 27.05.2025
//

import Foundation

// üì¶ –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–≥—Ä—ã
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç UserDefaults ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ
class GameProgressManager: ObservableObject {
    static let shared = GameProgressManager() // üîí Singleton: –æ–¥–∏–Ω –æ–±—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä

    // üóùÔ∏è –ö–ª—é—á–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    private let lettersKey = "progress_letters"
    private let foundWordsKey = "progress_foundWords"
    private let scoreKey = "progress_score"
    private let levelKey = "progress_level"

    private init() {}

    // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    func saveProgress(letters: [Character], foundWords: [String], score: Int, level: Int) {
        // UserDefaults –Ω–µ —É–º–µ–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å [Character], –ø–æ—ç—Ç–æ–º—É –∫–æ–Ω–≤–µ—Ä—Ç–∏–º –≤ [String]
        let letterStrings = letters.map { String($0) }

        UserDefaults.standard.set(letterStrings, forKey: lettersKey)
        UserDefaults.standard.set(foundWords, forKey: foundWordsKey)
        UserDefaults.standard.set(score, forKey: scoreKey)
        UserDefaults.standard.set(level, forKey: levelKey)

        print("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω: –±—É–∫–≤ \(letters.count), —Å–ª–æ–≤ \(foundWords.count), –æ—á–∫–∏ \(score), —É—Ä–æ–≤–µ–Ω—å \(level)")
    }

    // üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    func loadProgress() -> (letters: [Character], foundWords: [String], score: Int, level: Int)? {
        guard let letterStrings = UserDefaults.standard.stringArray(forKey: lettersKey),
              let foundWords = UserDefaults.standard.stringArray(forKey: foundWordsKey)
        else {
            print("‚ö†Ô∏è –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
            return nil
        }

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏–º [String] ‚Üí [Character]
        let letters = letterStrings.compactMap { $0.first }

        let score = UserDefaults.standard.integer(forKey: scoreKey)
        let level = UserDefaults.standard.integer(forKey: levelKey)

        print("üì¶ –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∂–µ–Ω: –±—É–∫–≤ \(letters.count), —Å–ª–æ–≤ \(foundWords.count), –æ—á–∫–∏ \(score), —É—Ä–æ–≤–µ–Ω—å \(level)")

        return (letters, foundWords, score, level)
    }

    // üßº –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–µ—Å–ª–∏ –Ω–∞–¥–æ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å—ë –Ω–∞—á–∏—Å—Ç–æ)
    func clearProgress() {
        UserDefaults.standard.removeObject(forKey: lettersKey)
        UserDefaults.standard.removeObject(forKey: foundWordsKey)
        UserDefaults.standard.removeObject(forKey: scoreKey)
        UserDefaults.standard.removeObject(forKey: levelKey)

        print("üóëÔ∏è –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω")
    }
}
